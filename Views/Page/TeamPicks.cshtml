@model int?
@{
    ViewData["Title"] = "Team Picks";
    string allClass = Model != null && Model.Value != 10 && Model.Value != 15 ? "nav-link active" : "nav-link";
    string fifteenClass = Model != null && Model.Value == 15 ? "nav-link active" : "nav-link";
    string tenClass = Model != null && Model.Value == 10 ? "nav-link active" : "nav-link";
}

<head>  
    <meta name="viewport" content="width=device-width" />  
    <title></title>  
</head> 
<form method="post" asp-controller="Page" asp-action="TeamPicks">
    <nav class="nav nav-pills nav-fill">
        <li class="nav-item">
            <a class=@allClass asp-controller="Page" asp-action="TeamPicks">All Gameweeks</a>
        </li>
        <li class="nav-item">
            <a class=@fifteenClass asp-controller="Page" asp-action="TeamPicks" asp-route-weeks="15">Last 15 Gameweeks</a>
        </li>
        <li class="nav-item">
            <a class=@tenClass asp-controller="Page" asp-action="TeamPicks" asp-route-weeks="10">Last 10 Gameweeks</a>
        </li>
    </nav>
</form>
&nbsp;&nbsp;&nbsp;

@if (DataService.AITeamChosen)
{
    var gameweekValues = DataService.Data.Fixtures.Where(x => x.finished == true).Select(x => x.number).Distinct().OrderBy(x => x).ToList();
    var gameweekValuesJson = Newtonsoft.Json.JsonConvert.SerializeObject(gameweekValues);
    
    //non-bench points values
    var managerGameweekValues = DataService.Controller.ManagerClient.GetManagerGameweeksData(5884469).Result.OrderBy(x => x.number).Select(x => x.points).ToList();
    while (managerGameweekValues.Count != gameweekValues.Count) managerGameweekValues.Insert(0,0);
    var managerGameweekValuesJson = Newtonsoft.Json.JsonConvert.SerializeObject(managerGameweekValues);

    //total values
    var managerGameweekTotalValues = DataService.Controller.ManagerClient.GetManagerGameweeksData(5884469).Result.OrderBy(x => x.number).Select(x => x.points + x.points_on_bench).ToList();
    while (managerGameweekTotalValues.Count != gameweekValues.Count) managerGameweekTotalValues.Insert(0,0);
    var managerGameweekTotalValuesJson = Newtonsoft.Json.JsonConvert.SerializeObject(managerGameweekTotalValues);
    
    var gameweekPointsTotalValues = new List<int>();
    foreach (int gameweek in gameweekValues)
    {
        gameweekPointsTotalValues.Add(DataService.Data.AITeam.Sum(x => x.playerDetails.pastFixtures.Where(y => DataService.Data.Fixtures.Where(f => f.id == y.fixture).FirstOrDefault().number == gameweek).FirstOrDefault()?.total_points.Value ?? 0));
    }

    var gameweekPointsValues = gameweekPointsTotalValues.Select(x => (double)x*11/15).ToList();
    var gameweekPointsTotalValuesJson = Newtonsoft.Json.JsonConvert.SerializeObject(gameweekPointsTotalValues); 
    var gameweekPointsValuesJson = Newtonsoft.Json.JsonConvert.SerializeObject(gameweekPointsValues);

    var totalSquadCost = (double)(DataService.Data.AITeam.Sum(x=>x.now_cost))/10;

    <body>
        <h4 class="text-center">Total Squad Cost: Â£@totalSquadCost M</h4>
        <hr/>

        @foreach(var positions in DataService.Data.AITeam.GroupBy(x => x.element_type).Reverse().ToList())
        {
            <h5 class="text-center">@DataService.Enumerators.PlayerTypes.Where(x => x.id == positions.FirstOrDefault()?.element_type)?.FirstOrDefault()?.plural_name</h5>
            <div class="row justify-content-md-center">
                @foreach(Player player in positions)
                {
                    var playerPhotoUrl = $"https://resources.premierleague.com/premierleague/photos/players/110x140/p{player.code}.png";
                    <div class="card text-center border-dark" style="width: 10rem;margin:10px">
                        <div class="card-header" style="background-color: #05386B;">
                            <p class="card-text" ><small class="text-white">@DataService.Data.Teams.Where(x => x.id == player.team).FirstOrDefault()?.name</small></p>
                        </div>
                        <img class="card-img-top" src="@playerPhotoUrl" alt="" style="background-color: #EDF5E1;">
                        <div class="card-body text-white" style="background-color: rgba(5, 56, 107, 0.4);">
                            <h6 class="card-title" style="margin-bottom: 0;">@player.web_name</h6>       
                            @*<a class="btn btn-primary" asp-area="" asp-controller="Home" asp-action="IdentificationDetails" asp-route-id="identification.Id" style="margin-bottom:20px">Details</a>*@     
                        </div>
                    </div>
                    <p></p>
                }
            </div>
        }
    
        <hr/>
        @await Html.PartialAsync("/Views/Charts/_LineChart2.cshtml", new FPLForecaster.Models.LineChartData(){
            chartId = "aiTotalPointsChart",
            chartTitle = "Gameweek Total Points for AI Team Picks",
            xValuesJson = gameweekValuesJson,
            yValuesJson = gameweekPointsTotalValuesJson,
            yValuesJson2 = managerGameweekTotalValuesJson,
            xLabel = "Gameweek",
            yLabel = "Points",
            hoverLabel = "Points: ",
            hoverLabelBefore = false,
            hoverTitle = "Gameweek ",
            hoverTitleBefore = true,
            height_pixels = "500"
        })
        &nbsp;
        <p class="text-center">AI Team Total Points: @gameweekPointsTotalValues.Sum()</p>
        <p class="text-center">Manager Team Total Points: @managerGameweekTotalValues.Sum()</p>
        @{var percentageImprovementTotal = FPLForecaster.Analysis.StatisticCalculator.PercentChange(managerGameweekTotalValues.Sum().Value, gameweekPointsTotalValues.Sum());}
        <p class="text-center">AI Team Improvement in Comparison to Manager Team: @percentageImprovementTotal %</p>   
        <hr/>
        @await Html.PartialAsync("/Views/Charts/_LineChart2.cshtml", new FPLForecaster.Models.LineChartData(){
            chartId = "aiPointsChart",
            chartTitle = "Gameweek Points (Non-Bench Points) for AI Team Picks",
            xValuesJson = gameweekValuesJson,
            yValuesJson = gameweekPointsValuesJson,
            yValuesJson2 = managerGameweekValuesJson,
            xLabel = "Gameweek",
            yLabel = "Points",
            hoverLabel = "Points: ",
            hoverLabelBefore = false,
            hoverTitle = "Gameweek ",
            hoverTitleBefore = true,
            height_pixels = "500"
        })
        &nbsp;
        <p class="text-center">AI Team Total Points: @gameweekPointsValues.Sum()</p>
        <p class="text-center">Manager Team Total Points: @managerGameweekValues.Sum()</p>
        @{var percentageImprovement = FPLForecaster.Analysis.StatisticCalculator.PercentChange(managerGameweekValues.Sum().Value, gameweekPointsValues.Sum());}
        <p class="text-center">AI Team Improvement in Comparison to Manager Team: @Math.Round(percentageImprovement,2,MidpointRounding.AwayFromZero) %</p>   
    </body>
}
